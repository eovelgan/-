{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from \"axios\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    msg: 'Hello Vue! Epifanov.',\n    optionList: [{\n      \"optionName\": \"ENABLE_CLEAR\",\n      \"optionValue\": \"1\"\n    }]\n  },\n  getters: {\n    getMsg(state) {\n      return state.msg;\n    },\n    getOptionList(state) {\n      return state.optionList;\n    }\n  },\n  mutations: {\n    setOptionList(state, optionList) {\n      state.optionList = optionList;\n    }\n  },\n  actions: {\n    async loadOptionList(context) {\n      try {\n        const url = '/kis/options';\n        const response = await axios.get(url);\n        const results = response.data;\n        context.commit('setOptionList', results);\n      } catch (err) {\n        if (err.response) {\n          console.log(\"Server Error:\", err);\n        } else if (err.request) {\n          console.log(\"Network Error\", err);\n        } else {\n          console.log(\"Client Error\", err);\n        }\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","Store","state","msg","optionList","getters","getMsg","getOptionList","mutations","setOptionList","actions","loadOptionList","context","url","response","get","results","data","commit","err","console","log","request","modules"],"sources":["C:/Users/stepa/IdeaProjects/WebKis/hello-world/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from \"axios\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    msg: 'Hello Vue! Epifanov.',\n    optionList: [{\n      \"optionName\":\"ENABLE_CLEAR\",\n      \"optionValue\":\"1\"\n    }]\n\n  },\n  getters: {\n    getMsg (state){\n      return state.msg\n    },\n    getOptionList(state)\n    {\n      return state.optionList\n    }\n  },\n  mutations: {\n    setOptionList(state, optionList){\n      state.optionList = optionList\n    }\n  },\n  actions: {\n    async loadOptionList(context){\n      try{\n        const url = '/kis/options'\n        const response = await axios.get(url)\n        const results = response.data\n        context.commit('setOptionList', results)\n      } catch(err){\n        if (err.response){\n          console.log(\"Server Error:\", err)\n        } else if (err.request){\n          console.log(\"Network Error\", err)\n        } else {\n          console.log(\"Client Error\",err)\n        }\n\n\n\n      }\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzBF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,GAAG,EAAE,sBAAsB;IAC3BC,UAAU,EAAE,CAAC;MACX,YAAY,EAAC,cAAc;MAC3B,aAAa,EAAC;IAChB,CAAC;EAEH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAM,CAAEJ,KAAK,EAAC;MACZ,OAAOA,KAAK,CAACC,GAAG;IAClB,CAAC;IACDI,aAAa,CAACL,KAAK,EACnB;MACE,OAAOA,KAAK,CAACE,UAAU;IACzB;EACF,CAAC;EACDI,SAAS,EAAE;IACTC,aAAa,CAACP,KAAK,EAAEE,UAAU,EAAC;MAC9BF,KAAK,CAACE,UAAU,GAAGA,UAAU;IAC/B;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,cAAc,CAACC,OAAO,EAAC;MAC3B,IAAG;QACD,MAAMC,GAAG,GAAG,cAAc;QAC1B,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACF,GAAG,CAAC;QACrC,MAAMG,OAAO,GAAGF,QAAQ,CAACG,IAAI;QAC7BL,OAAO,CAACM,MAAM,CAAC,eAAe,EAAEF,OAAO,CAAC;MAC1C,CAAC,CAAC,OAAMG,GAAG,EAAC;QACV,IAAIA,GAAG,CAACL,QAAQ,EAAC;UACfM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAAC;QACnC,CAAC,MAAM,IAAIA,GAAG,CAACG,OAAO,EAAC;UACrBF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAAC;QACnC,CAAC,MAAM;UACLC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACF,GAAG,CAAC;QACjC;MAIF;IACF;EACF,CAAC;EACDI,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}